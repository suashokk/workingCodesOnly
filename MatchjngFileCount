import os
from email import policy
from email.parser import BytesParser

def load_filtered_emails(file_path):
    if not file_path or not os.path.isfile(file_path):
        print(f"Invalid or missing file path: {file_path}")
        return set()

    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return set(line.strip().lower() for line in f if line.strip())
    except Exception as e:
        print(f"Error reading filtered emails from file: {e}")
        return set()

def file_contains_any_email(file_path, email_set):
    if not file_path or not os.path.isfile(file_path) or not email_set:
        return False

    try:
        with open(file_path, 'rb') as f:
            msg = BytesParser(policy=policy.default).parse(f)
            text = str(msg).lower()
            return any(email in text for email in email_set)
    except Exception as e:
        print(f"Error reading {file_path}: {e}")
        return False

def scan_eml_files(folder_path, email_set):
    if not folder_path or not os.path.isdir(folder_path) or not email_set:
        print("Invalid folder path or email set.")
        return 0, 0

    total_files = 0
    matched_files = 0

    for root, _, files in os.walk(folder_path):
        for file in files:
            if file and file.lower().endswith(".eml"):
                total_files += 1
                full_path = os.path.join(root, file)
                if file_contains_any_email(full_path, email_set):
                    matched_files += 1

    return matched_files, total_files

if __name__ == "__main__":
    filtered_email_file = "/n02/est/fil_emails.txt"
    eml_folder = "/nsdf2/Day/"  # Folder with .eml files

    filtered_emails = load_filtered_emails(filtered_email_file)
    matched, total = scan_eml_files(eml_folder, filtered_emails)

    print("\nMatched .eml files: {} / {}".format(matched, total))
